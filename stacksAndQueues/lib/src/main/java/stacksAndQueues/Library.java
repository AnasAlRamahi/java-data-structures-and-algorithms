/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stacksAndQueues;

public class Library {
    public static void main(String[] args) {



        Cat c = new Cat();
        System.out.println(c.getClass().getName());

        Dog d = new Dog();


        AnimalShelter as = new AnimalShelter();

        as.enqueue(c);
        as.enqueue(d);

        System.out.println(as.animalQueue.toString());

        System.out.println(as.dequeue("cat"));
        System.out.println(as.animalQueue.toString());

//        PseudoQueue<Integer> pq = new PseudoQueue<Integer>();
//        System.out.println(pq.toString());

//        pq.pseudoEnqueue(1);
//        pq.pseudoEnqueue(2);
//        pq.pseudoEnqueue(3);
//
//        System.out.println(pq.toString());
//
//        System.out.println(pq.pseudoDequeue());
//        System.out.println(pq.pseudoDequeue());
//        System.out.println(pq.pseudoDequeue());
//        System.out.println(pq.pseudoDequeue());


//        Stack stack = new Stack<Integer>();
//
//        stack.push(1);
//        stack.push(2);
//        stack.push(3);
//        stack.push(4);
//        System.out.println(stack);
//        System.out.println(stack.pop());
//
//        System.out.println(stack);
//        System.out.println(stack.pop());
//
//        System.out.println(stack);
//
//        System.out.println("The current top of the stack: " + stack.peek());

//
//        Queue q = new Queue<Integer>();
//        q.enqueue(1);
//        q.enqueue(2);
//        q.enqueue(3);
//        q.enqueue(4);
//        q.enqueue(5);
//
//        System.out.println(q);
//
//        System.out.println(q.dequeue());
//        System.out.println(q);
//
//        System.out.println(q.dequeue());
//        System.out.println(q);
//
//        System.out.println(q.dequeue());
//        System.out.println(q);
//
//        System.out.println(q.dequeue());
//        System.out.println(q);
//
//        System.out.println(q.peek());
//        System.out.println(q.peek());
//
//        System.out.println(q.dequeue());
//        System.out.println(q);
//
//        System.out.println(q.dequeue());
//        System.out.println(q);





    }
}
